<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Admin extends CI_Controller {

    public function __construct() {
        parent::__construct();

        //chargement des ressource du constructeur
        $this->load->helper(array('url', 'assets'));
        $this->load->helper('fn_info');
        $this->load->library('form_validation');
        $this->load->library('session');
        
        //chargement modele
        $this->load->model('user_modele', 'userManager');
		$this->load->model('Agence_modele', 'agenceManager');
		$this->load->model('Pelerin_modele', 'pelerinManager');
        $this->load->helper('form');
        $this->load->helper('html');
        $this->load->library('table');
    }
   

    public function index() {
          $type = $this->session->userdata('type');
		  $nbr_pel=0;
		  $nbr_service=0;
        if ($type==0) {
        $data['info'] = $this->session->flashdata('info');
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "Vue_admin";
        $this->load->view('template/template', $data);
    }elseif($type==3 || $type==4 ||  $type==2 ||  $type==5){
		$id_ag = $this->session->userdata('id_ag');
		 $data['nbr_pel']=$nbr_pel+$this->pelerinManager->count_pelerin("AG_PELERIN=$id_ag");  
		 $data['nbr_service']=$nbr_service+$this->userManager->count_service("SERVICE_AG=$id_ag");  
		 $data['info'] = $this->session->flashdata('info');
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "Vue_admin_agence";
        $this->load->view('template/template', $data);
	}}

    public function new_user() {
          $type = $this->session->userdata('user_type');
        if ($type==0) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "user_vue";

        
        $this->form_validation->set_rules('nom', '"Nom"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'prenom',"Prénom", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'email',"Email", 'trim|required|min_length[5]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'pseudo',"Pseudo", 'trim|required|min_length[3]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'pass',"Mot de Passe", 'trim|required|min_length[4]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'etat',"Etat", 'trim|required|min_length[1]|max_length[1]|encode_php_tags');

        

        

        if ($this->form_validation->run()) {
            $isInsert = FALSE;
            //recuperation valeur
            $nom = $this->input->post('nom');
            $prenom = $this->input->post('prenom');
            $email = $this->input->post('email');
            $pseudo =$this->input->post('pseudo');
            $pass= $this->input->post('pass');
            $etat= $this->input->post('etat');
            $droit= $this->input->post('droit');
             $pass=md5($pass);

            $isInsert = $this->userManager->ajouter_user($nom, $prenom, 
            $email, $pseudo,$pass,$droit);

            if ($isInsert) {
                $info = ajout_succes_info("Nouveau useristrateur");
                $this->session->set_flashdata('info', $info);

                redirect('user');
            } else {
                $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                $this->session->set_flashdata('info', $info);
            }
        }
        $data['info'] = "";
       $data['tableau'] = $this->get_tableau();
        $this->load->view('template/template', $data);
    }}
	 public function New_comite() {
          $type = $this->session->userdata('type');
        if ($type==0) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "Vue_comite";

        
        $this->form_validation->set_rules('noms', '"Nom"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'prenom',"Prénom", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'phone',"Telephone", 'trim|required|min_length[5]|max_length[50]|encode_php_tags');
        if ($this->form_validation->run()) {
            $isInsert = FALSE;
            //recuperation valeur
            $noms = $this->input->post('noms');
            $prenom = $this->input->post('prenom');
            $email = $this->input->post('email');
            $phone =$this->input->post('phone');
            $adresse= $this->input->post('adresse');
            $isInsert = $this->userManager->ajouter_partenaire($noms, $prenom, 
            $adresse, $email,$phone);

            if ($isInsert) {
                $info = ajout_succes_info("Nouveau partenaire");
                $this->session->set_flashdata('info', $info);

                redirect('Admin/New_partenaire');
            } else {
                $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                $this->session->set_flashdata('info', $info);
            }
        }
        $data['info'] = "";
       $data['tableau'] = $this->get_partenaire();
        $this->load->view('template/template', $data);
    }}
	public function New_service() {
          $type = $this->session->userdata('type');
        if ($type==2) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "Vue_service";

        
        $this->form_validation->set_rules('service', '"DESIGNATION SERVICE"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'cout',"COUT SERVICE", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'edition',"EDITION", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        if ($this->form_validation->run()) {
            $isInsert = FALSE;
            //recuperation valeur
            $service = $this->input->post('service');
            $cout = $this->input->post('cout');
            $edition =$this->input->post('edition');
            $observ =$this->input->post('observ');
            $id_ag= $this->input->post('id_ag');
            $isInsert = $this->userManager->ajouter_service($service,$cout, 
            $edition, $observ,$id_ag);

            if ($isInsert) {
                $info = ajout_succes_info("Nouveau service creer");
                $this->session->set_flashdata('info', $info);
                redirect('Admin/New_service');
            } else {
                $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                $this->session->set_flashdata('info', $info);
            }
        }
          $data['info'] = $this->session->flashdata('info');
       $data['tableau'] = $this->get_service();
        $this->load->view('template/template', $data);
    }}
	public function delete_service($id) {
          $type = $this->session->userdata('type');
        if ($type==0 || $type==2) {
        $result = $this->userManager->disable_service($id);
        if ($result) {
            $info = suppression_succes_info('Element Supprimé avec Succès');
            $this->session->set_flashdata('info', $info);
        } else {
            $info = suppression_fail_info('Echec Suppression Element');
            $this->session->set_flashdata('info', $info);
        }
        redirect('Admin/New_service');
    }}
 public function New_partenaire() {
          $type = $this->session->userdata('type');
        if ($type==0) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "Vue_partenaire";

        
        $this->form_validation->set_rules('noms', '"Nom"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'prenom',"Prénom", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'phone',"Telephone", 'trim|required|min_length[5]|max_length[50]|encode_php_tags');
        if ($this->form_validation->run()) {
            $isInsert = FALSE;
            //recuperation valeur
            $noms = $this->input->post('noms');
            $prenom = $this->input->post('prenom');
            $email = $this->input->post('email');
            $phone =$this->input->post('phone');
            $adresse= $this->input->post('adresse');
            $isInsert = $this->userManager->ajouter_partenaire($noms, $prenom, 
            $adresse, $email,$phone);

            if ($isInsert) {
                $info = ajout_succes_info("Nouveau partenaire");
                $this->session->set_flashdata('info', $info);

                redirect('Admin/New_partenaire');
            } else {
                $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                $this->session->set_flashdata('info', $info);
            }
        }
        $data['info'] = "";
       $data['tableau'] = $this->get_partenaire();
        $this->load->view('template/template', $data);
    }}
    public function delete($id) {
          $type = $this->session->userdata('user_type');
        if ($type==0) {
        $result = $this->userManager->delete_user($id);
        if ($result) {
            $info = suppression_succes_info('Element Supprimé avec Succès');
            $this->session->set_flashdata('info', $info);
        } else {
            $info = suppression_fail_info('Echec Suppression Element');
            $this->session->set_flashdata('info', $info);
        }
        redirect('user');
    }}
	public function delete_partenaire($id) {
          $type = $this->session->userdata('type');
        if ($type==0) {
        $result = $this->userManager->delete_partenaire($id);
        if ($result) {
            $info = suppression_succes_info('Element Supprimé avec Succès');
            $this->session->set_flashdata('info', $info);
        } else {
            $info = suppression_fail_info('Echec Suppression Element');
            $this->session->set_flashdata('info', $info);
        }
        redirect('Admin/New_partenaire');
    }}
public function update_partenaire($id = '') {
          $type = $this->session->userdata('user_type');
        if ($type==0) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "partenaire_edit_vue";


        if ($id != '' && $id > 0) {
            $query = $this->userManager->liste_partenaire(array('ID_PART' => $id));
            if ($query) {
                $data['partenaire_edit'] = $query;
            }
        } elseif ($this->input->post('id')) {
            $id = $this->input->post('id');
         $this->form_validation->set_rules('noms', '"Nom"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'prenom',"Prénom", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'phone',"Telephone", 'trim|required|min_length[5]|max_length[50]|encode_php_tags');
            if ($this->form_validation->run()) {
                $isInsert = FALSE;
                //recuperation valeur
           $noms = $this->input->post('noms');
            $prenom = $this->input->post('prenom');
            $email = $this->input->post('email');
            $phone =$this->input->post('phone');
            $adresse= $this->input->post('adresse');
                  $isInsert = $this->userManager->update_partenaire($id ,$noms, $prenom, 
            $adresse, $email,$phone);
                if ($isInsert) {
                    $info = ajout_succes_info("Mise à jour Ajouté");
                    $this->session->set_flashdata('info', $info);

                    redirect('Admin/New_partenaire');
                   }else{
                    $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                    $this->session->set_flashdata('info', $info);
                         }
            } else {
                $this->update($id);
            }
        } elseif ($id == "") {
            redirect('Admin/New_partenaire');
        }

        $data['info'] = "";
        $data['tableau'] = $this->get_partenaire();
        $this->load->view('template/template', $data);
    }}
    public function update($id = '') {
          $type = $this->session->userdata('user_type');
        if ($type==0) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "user_edit_vue";


        if ($id != '' && $id > 0) {
            $query = $this->userManager->get_user(array('id_user' => $id));
            if ($query) {
                $data['user_edit'] = $query;
            }
        } elseif ($this->input->post('id')) {
            $id = $this->input->post('id');
        $this->form_validation->set_rules('nom', '"Nom"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'prenom',"Prénom", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'email',"Email", 'trim|required|min_length[5]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'pseudo',"Pseudo", 'trim|required|min_length[3]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'pass',"Mot de Passe", 'trim|required|min_length[4]|max_length[50]|encode_php_tags');

            if ($this->form_validation->run()) {

                $isInsert = FALSE;

                //recuperation valeur
          
            $nom = $this->input->post('nom');
            $prenom = $this->input->post('prenom');
            $email = $this->input->post('email');
            $pseudo =$this->input->post('pseudo');
            $pass= $this->input->post('pass');
            $etat= $this->input->post('etat');
            $droit= $this->input->post('droit');
            $pass=md5($pass);
                
                  $isInsert = $this->userManager->update_user($id , $nom, $prenom, 
                   $email, $pseudo,$pass,$droit);
                if ($isInsert) {
                    $info = ajout_succes_info("Mise à jour Ajouté");
                    $this->session->set_flashdata('info', $info);

                    redirect('user');
                   }else{
                    $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                    $this->session->set_flashdata('info', $info);
                         }
            } else {
                $this->update($id);
            }
        } elseif ($id == "") {
            redirect('user');
        }

        $data['info'] = "";
        $data['tableau'] = $this->get_tableau();
        $this->load->view('template/template', $data);
    }}
 public function update_service($id = '') {
          $type = $this->session->userdata('type');
        if ($type==2 || $type==3) {
        $data['menu_top']="template/menu_top";
        $data['main_content'] = "vue_edit_service";


        if ($id != '' && $id > 0) {
            $query = $this->userManager->liste_service(array('ID_SERVICE' => $id));
            if ($query) {
                $data['service_edit'] = $query;
            }
        } elseif ($this->input->post('id')) {
            $id = $this->input->post('id');
       $this->form_validation->set_rules('service', '"DESIGNATION SERVICE"', 'trim|required|min_length[2]|max_length[52]|encode_php_tags');
        $this->form_validation->set_rules( 'cout',"COUT SERVICE", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        $this->form_validation->set_rules( 'edition',"EDITION", 'trim|required|min_length[2]|max_length[50]|encode_php_tags');
        if ($this->form_validation->run()) {
            $isInsert = FALSE;
            //recuperation valeur
            $service = $this->input->post('service');
            $cout = $this->input->post('cout');
            $edition =$this->input->post('edition');
            $observ =$this->input->post('observ');
            $id_ag= $this->input->post('id_ag');
                  $isInsert = $this->userManager->update_service($id , $service,$cout, 
            $edition, $observ,$id_ag);
                if ($isInsert) {
                    $info = ajout_succes_info("Mise à jour Ajouté");
                    $this->session->set_flashdata('info', $info);

                    redirect('Admin/New_service');
                   }else{
                    $info = ajout_fail_info('Veuillez verifier vos information et réessayez');
                    $this->session->set_flashdata('info', $info);
                         }
            } else {
                $this->update_service($id);
            }
        } elseif ($id == "") {
            redirect('Admin/New_service');
        }

        $data['info'] = "";
        $data['tableau'] = $this->get_service();
        $this->load->view('template/template', $data);
    }}
    public function liste($id = '') {
        $data['info'] = $this->session->flashdata('info');
        $data['menu_top'] = "template/menu_top";
        $data['main_content'] = "Agence_liste";
        $data['tableau'] = $this->get_tableau_agence();
        $this->load->view('template/template', $data);
    }
	 public function liste_service($id = '') {
        $data['info'] = $this->session->flashdata('info');
        $data['menu_top'] = "template/menu_top";
        $data['main_content'] = "service_liste";
        $data['tableau'] = $this->get_service();
        $this->load->view('template/template', $data);
    }
    
function get_tableau() {
    $type = $this->session->userdata('user_type');
        if ($type==0) {  
$template = array('table_open'=> '<table id="tab" class="well  table table-hover table-striped table-bordered" border=1>');
        $this->table->set_heading(array('Nom', "Prénom" , 'Email','Pseudo', 'Droit', array('data'=>'ACTIONS', 'colspan'=>2 )));
        
        $query_user = $this->userManager->liste_user();
        if (is_array($query_user) && count($query_user)) {
            $droit="faible";
          
            foreach ($query_user as $loop) {
                 if($loop->droit==1){
           $droit='moyen';     
            }elseif ($loop->droit==2) {
                $droit="elevé";
                
                
            }
                $this->table->add_row(array($loop->nom_user, $loop->prenom_user,$loop->mail_user,
                    $loop->login,$droit,
                    
                    '<a href="'.site_url("user/update/$loop->id_user").'" ><span class="glyphicon glyphicon-edit"></span> </a>',
                    '<a href="'.site_url("user/delete/$loop->id_user").'" ><span class="glyphicon glyphicon-trash"></span></a>'));
            }
        }

        $this->table->set_template($template);
        return $this->table->generate();
}}

function get_partenaire() {
    $type = $this->session->userdata('user_type');
        if ($type==0) {  
$template = array('table_open'=> '<table id="tab" class="well  table table-hover table-striped table-bordered" border=1>');
        $this->table->set_heading(array('Nom', "Prénom" , 'Adresse','E-mail', 'Telephone', array('data'=>'ACTIONS', 'colspan'=>2 )));
        
        $query_partenaire = $this->userManager->liste_partenaire();
        if (is_array($query_partenaire) && count($query_partenaire)) {
            $droit="faible";
          
            foreach ($query_partenaire as $loop) {
                /* if($loop->droit==1){
           $droit='moyen';     
            }elseif ($loop->droit==2) {
                $droit="elevé";
                
                
            }*/
                $this->table->add_row(array($loop->NOM_PART, $loop->PRENOM_PART,$loop->ADRESSE_PART,
                    $loop->MAIL_PART, $loop->PHONE_PART,
                    
                    '<a href="'.site_url("Admin/update_partenaire/$loop->ID_PART").'" ><span class="glyphicon glyphicon-edit"></span> </a>',
                    '<a href="'.site_url("Admin/delete_partenaire/$loop->ID_PART").'" ><span class="glyphicon glyphicon-trash"></span></a>'));
            }
        }

        $this->table->set_template($template);
        return $this->table->generate();
}}
function get_service() {
    $type = $this->session->userdata('type');
	$id_ag = $this->session->userdata('id_ag');
        if ($type==2) {  
$template = array('table_open'=> '<table id="tab" class="well  table table-hover table-striped table-bordered" border=1>');
        $this->table->set_heading(array('#', "DESIGNATION" , 'COUT','EDITION', 'AGENCE', 'Edit','Delete'));
        
        $query_service = $this->userManager->liste_service("SERVICE_AG=$id_ag and DEL_SERVICE=0");
        if (is_array($query_service) && count($query_service)) {
            $droit="faible";
          
            foreach ($query_service as $loop) {
                /* if($loop->droit==1){
           $droit='moyen';     
            }elseif ($loop->droit==2) {
                $droit="elevé";
                
                
            }*/
                $this->table->add_row(array($loop->ID_SERVICE, $loop->DESIGNATION,$loop->COUT_SERVICE,
                    $loop->ANNE_EDITION, $loop->NOM_AG,
                    
                    '<a href="'.site_url("Admin/update_service/$loop->ID_SERVICE").'" ><span class="glyphicon glyphicon-edit"></span> </a>',
                    '<a href="'.site_url("Admin/delete_service/$loop->ID_SERVICE").'" ><span class="glyphicon glyphicon-trash"></span></a>'));
            }
        }

        $this->table->set_template($template);
        return $this->table->generate();
}}
function get_tableau_agence() {
    $type = $this->session->userdata('type');
        if ($type==1) {  
$template = array('table_open'=> '<table id="tab" class="  table table-hover table-striped table-bordered" border=1>' );
        $this->table->set_heading(array('Agence_de_voyages ','Contacts', "E-mail" ,'Siege','Login ',  array('data'=>'ACTIONS', 'colspan'=>2 )));
        
        $query_agence = $this->agenceManager->liste_agence(array('DELETE_AG'=>0));
        if (is_array($query_agence) && count($query_agence)) {
            $droit="faible";
          
            foreach ($query_agence as $loop) {
                $this->table->add_row(array($loop->NOM_AG,$loop->PHONE_AG, $loop->MAIL_AG,
                $loop->SIEGE_AG,$loop->LOGIN_AG,
                    '<a href="'.site_url("Agence/update/$loop->ID_AG").'" ><span class="glyphicon glyphicon-edit"></span> </a>',
                    '<a href="'.site_url("Agence/delete/$loop->ID_AG").'"><span class="glyphicon glyphicon-trash"></span></a>'));
            }
        }

        $this->table->set_template($template);
        return $this->table->generate();
}elseif($type==0){
	$template = array('table_open'=> '<table id="tab" class="  table table-hover table-striped table-bordered" border=1>' );
        $this->table->set_heading(array('Agence_de_voyages ','Contacts', "E-mail" ,'Siege','Aboné SMS','Contrat',  array('data'=>'ACTIONS', 'colspan'=>2 )));
        
        $query_agence = $this->agenceManager->liste_agence(array('DELETE_AG'=>2));
        if (is_array($query_agence) && count($query_agence)) {
            $droit="faible";
          
            foreach ($query_agence as $loop) {
                $this->table->add_row(array($loop->NOM_AG,$loop->PHONE_AG, $loop->MAIL_AG,
                $loop->SIEGE_AG,'<div class="progress md-progress">
    <div class="progress-bar panel panel-primary" role="progressbar" style="width: 0;" aria-valuenow="12" aria-valuemin="12" aria-valuemax="100"></div>
</div>','actif',
                    '<a href="#" ><span class="glyphicon glyphicon-edit"></span> </a>',
                    '<a href="#"><span class="glyphicon glyphicon-trash"></span></a>'));
            }
        }

        $this->table->set_template($template);
        return $this->table->generate();
	
}
}
function  get_option_categorie(){
    $options=  array();
    $query_categorie = $this->categorieManager->liste_categorie();
        if (is_array($query_categorie) && count($query_categorie)) {
            foreach ($query_categorie as $loop) {
                $options[$loop->CAT_ID]=$loop->CAT_NOM;
            }
        }
        return $options;
}

}

